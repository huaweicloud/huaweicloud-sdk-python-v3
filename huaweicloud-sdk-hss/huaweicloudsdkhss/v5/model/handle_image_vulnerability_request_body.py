# coding: utf-8

import six

from huaweicloudsdkcore.utils.http_utils import sanitize_for_serialization


class HandleImageVulnerabilityRequestBody:

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    sensitive_list = []

    openapi_types = {
        'image_type': 'str',
        'type': 'str',
        'operate_type': 'str',
        'handle_status': 'str',
        'select_type': 'str',
        'image_id_list': 'list[str]',
        'vul_id_list': 'list[str]',
        'vul_data_list': 'list[HandleImageVulnerabilityRequestBodyVulDataList]',
        'image_data_list': 'list[HandleImageVulnerabilityRequestBodyImageDataList]',
        'remark': 'str'
    }

    attribute_map = {
        'image_type': 'image_type',
        'type': 'type',
        'operate_type': 'operate_type',
        'handle_status': 'handle_status',
        'select_type': 'select_type',
        'image_id_list': 'image_id_list',
        'vul_id_list': 'vul_id_list',
        'vul_data_list': 'vul_data_list',
        'image_data_list': 'image_data_list',
        'remark': 'remark'
    }

    def __init__(self, image_type=None, type=None, operate_type=None, handle_status=None, select_type=None, image_id_list=None, vul_id_list=None, vul_data_list=None, image_data_list=None, remark=None):
        r"""HandleImageVulnerabilityRequestBody

        The model defined in huaweicloud sdk

        :param image_type: **参数解释**: 镜像类型 **约束限制**: 不涉及 **取值范围**: - local：本地镜像 - registry：仓库镜像 - cicd：cicd镜像  **默认取值**: 不涉及 
        :type image_type: str
        :param type: **参数解释**: 漏洞类型 **约束限制**: 不涉及 **取值范围**: - linux_vul：Linux系统漏洞 - app_vul：应用漏洞  **默认取值**: 不涉及 
        :type type: str
        :param operate_type: **参数解释**: 对漏洞做的处置动作 **约束限制**: 不涉及 **取值范围**: - ignore：忽略 - not_ignore：取消忽略 - manual_repair：人工修复 - add_to_whitelist：加白  **默认取值**: 不涉及 
        :type operate_type: str
        :param handle_status: **参数解释**: 需要处置的漏洞状态 **约束限制**: 不涉及 **取值范围**: - unhandled：待处理的漏洞 - handled：已处理的漏洞  **默认取值**: 不涉及 
        :type handle_status: str
        :param select_type: **参数解释**: 处置漏洞范围的类型 **约束限制**: 不涉及 **取值范围**: - all_vul：处置所有漏洞 - specific_image_all_vul：处置指定镜像的所有漏洞 - specific_vul_all_image：处置指定漏洞的全部镜像 - vul_view：通过漏洞维度指定需要处置的漏洞和镜像信息 - image_view：通过镜像维度指定需要处置的漏洞和镜像信息  **默认取值**: 不涉及 
        :type select_type: str
        :param image_id_list: **参数解释**: select_type值为specific_image_all_vul时，该字段用于指定需要处置的镜像id列表 **约束限制**: 仅在select_type值为specific_image_all_vul时该字段有效 **取值范围**: 不涉及 **默认取值**: 不涉及 
        :type image_id_list: list[str]
        :param vul_id_list: **参数解释**: select_type值为specific_vul_all_image时，该字段用于指定需要处置的漏洞id列表 **约束限制**: 仅在select_type值为specific_vul_all_image时该字段有效 **取值范围**: 不涉及 **默认取值**: 不涉及 
        :type vul_id_list: list[str]
        :param vul_data_list: **参数解释**: select_type值为vul_view时，该字段用于指定需要处置的漏洞和镜像信息 **约束限制**: 仅在select_type值为vul_view时该字段有效 **取值范围**: 不涉及 **默认取值**: 不涉及 
        :type vul_data_list: list[:class:`huaweicloudsdkhss.v5.HandleImageVulnerabilityRequestBodyVulDataList`]
        :param image_data_list: **参数解释**: select_type值为image_view时，该字段用于指定需要处置的漏洞和镜像信息 **约束限制**: 仅在select_type值为image_view时该字段有效 **取值范围**: 不涉及 **默认取值**: 不涉及 
        :type image_data_list: list[:class:`huaweicloudsdkhss.v5.HandleImageVulnerabilityRequestBodyImageDataList`]
        :param remark: **参数解释**: 处置操作的描述信息 **约束限制**: 不涉及 **取值范围**: 字符长度0-512位 **默认取值**: 不涉及 
        :type remark: str
        """
        
        

        self._image_type = None
        self._type = None
        self._operate_type = None
        self._handle_status = None
        self._select_type = None
        self._image_id_list = None
        self._vul_id_list = None
        self._vul_data_list = None
        self._image_data_list = None
        self._remark = None
        self.discriminator = None

        self.image_type = image_type
        self.type = type
        self.operate_type = operate_type
        if handle_status is not None:
            self.handle_status = handle_status
        self.select_type = select_type
        if image_id_list is not None:
            self.image_id_list = image_id_list
        if vul_id_list is not None:
            self.vul_id_list = vul_id_list
        if vul_data_list is not None:
            self.vul_data_list = vul_data_list
        if image_data_list is not None:
            self.image_data_list = image_data_list
        if remark is not None:
            self.remark = remark

    @property
    def image_type(self):
        r"""Gets the image_type of this HandleImageVulnerabilityRequestBody.

        **参数解释**: 镜像类型 **约束限制**: 不涉及 **取值范围**: - local：本地镜像 - registry：仓库镜像 - cicd：cicd镜像  **默认取值**: 不涉及 

        :return: The image_type of this HandleImageVulnerabilityRequestBody.
        :rtype: str
        """
        return self._image_type

    @image_type.setter
    def image_type(self, image_type):
        r"""Sets the image_type of this HandleImageVulnerabilityRequestBody.

        **参数解释**: 镜像类型 **约束限制**: 不涉及 **取值范围**: - local：本地镜像 - registry：仓库镜像 - cicd：cicd镜像  **默认取值**: 不涉及 

        :param image_type: The image_type of this HandleImageVulnerabilityRequestBody.
        :type image_type: str
        """
        self._image_type = image_type

    @property
    def type(self):
        r"""Gets the type of this HandleImageVulnerabilityRequestBody.

        **参数解释**: 漏洞类型 **约束限制**: 不涉及 **取值范围**: - linux_vul：Linux系统漏洞 - app_vul：应用漏洞  **默认取值**: 不涉及 

        :return: The type of this HandleImageVulnerabilityRequestBody.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        r"""Sets the type of this HandleImageVulnerabilityRequestBody.

        **参数解释**: 漏洞类型 **约束限制**: 不涉及 **取值范围**: - linux_vul：Linux系统漏洞 - app_vul：应用漏洞  **默认取值**: 不涉及 

        :param type: The type of this HandleImageVulnerabilityRequestBody.
        :type type: str
        """
        self._type = type

    @property
    def operate_type(self):
        r"""Gets the operate_type of this HandleImageVulnerabilityRequestBody.

        **参数解释**: 对漏洞做的处置动作 **约束限制**: 不涉及 **取值范围**: - ignore：忽略 - not_ignore：取消忽略 - manual_repair：人工修复 - add_to_whitelist：加白  **默认取值**: 不涉及 

        :return: The operate_type of this HandleImageVulnerabilityRequestBody.
        :rtype: str
        """
        return self._operate_type

    @operate_type.setter
    def operate_type(self, operate_type):
        r"""Sets the operate_type of this HandleImageVulnerabilityRequestBody.

        **参数解释**: 对漏洞做的处置动作 **约束限制**: 不涉及 **取值范围**: - ignore：忽略 - not_ignore：取消忽略 - manual_repair：人工修复 - add_to_whitelist：加白  **默认取值**: 不涉及 

        :param operate_type: The operate_type of this HandleImageVulnerabilityRequestBody.
        :type operate_type: str
        """
        self._operate_type = operate_type

    @property
    def handle_status(self):
        r"""Gets the handle_status of this HandleImageVulnerabilityRequestBody.

        **参数解释**: 需要处置的漏洞状态 **约束限制**: 不涉及 **取值范围**: - unhandled：待处理的漏洞 - handled：已处理的漏洞  **默认取值**: 不涉及 

        :return: The handle_status of this HandleImageVulnerabilityRequestBody.
        :rtype: str
        """
        return self._handle_status

    @handle_status.setter
    def handle_status(self, handle_status):
        r"""Sets the handle_status of this HandleImageVulnerabilityRequestBody.

        **参数解释**: 需要处置的漏洞状态 **约束限制**: 不涉及 **取值范围**: - unhandled：待处理的漏洞 - handled：已处理的漏洞  **默认取值**: 不涉及 

        :param handle_status: The handle_status of this HandleImageVulnerabilityRequestBody.
        :type handle_status: str
        """
        self._handle_status = handle_status

    @property
    def select_type(self):
        r"""Gets the select_type of this HandleImageVulnerabilityRequestBody.

        **参数解释**: 处置漏洞范围的类型 **约束限制**: 不涉及 **取值范围**: - all_vul：处置所有漏洞 - specific_image_all_vul：处置指定镜像的所有漏洞 - specific_vul_all_image：处置指定漏洞的全部镜像 - vul_view：通过漏洞维度指定需要处置的漏洞和镜像信息 - image_view：通过镜像维度指定需要处置的漏洞和镜像信息  **默认取值**: 不涉及 

        :return: The select_type of this HandleImageVulnerabilityRequestBody.
        :rtype: str
        """
        return self._select_type

    @select_type.setter
    def select_type(self, select_type):
        r"""Sets the select_type of this HandleImageVulnerabilityRequestBody.

        **参数解释**: 处置漏洞范围的类型 **约束限制**: 不涉及 **取值范围**: - all_vul：处置所有漏洞 - specific_image_all_vul：处置指定镜像的所有漏洞 - specific_vul_all_image：处置指定漏洞的全部镜像 - vul_view：通过漏洞维度指定需要处置的漏洞和镜像信息 - image_view：通过镜像维度指定需要处置的漏洞和镜像信息  **默认取值**: 不涉及 

        :param select_type: The select_type of this HandleImageVulnerabilityRequestBody.
        :type select_type: str
        """
        self._select_type = select_type

    @property
    def image_id_list(self):
        r"""Gets the image_id_list of this HandleImageVulnerabilityRequestBody.

        **参数解释**: select_type值为specific_image_all_vul时，该字段用于指定需要处置的镜像id列表 **约束限制**: 仅在select_type值为specific_image_all_vul时该字段有效 **取值范围**: 不涉及 **默认取值**: 不涉及 

        :return: The image_id_list of this HandleImageVulnerabilityRequestBody.
        :rtype: list[str]
        """
        return self._image_id_list

    @image_id_list.setter
    def image_id_list(self, image_id_list):
        r"""Sets the image_id_list of this HandleImageVulnerabilityRequestBody.

        **参数解释**: select_type值为specific_image_all_vul时，该字段用于指定需要处置的镜像id列表 **约束限制**: 仅在select_type值为specific_image_all_vul时该字段有效 **取值范围**: 不涉及 **默认取值**: 不涉及 

        :param image_id_list: The image_id_list of this HandleImageVulnerabilityRequestBody.
        :type image_id_list: list[str]
        """
        self._image_id_list = image_id_list

    @property
    def vul_id_list(self):
        r"""Gets the vul_id_list of this HandleImageVulnerabilityRequestBody.

        **参数解释**: select_type值为specific_vul_all_image时，该字段用于指定需要处置的漏洞id列表 **约束限制**: 仅在select_type值为specific_vul_all_image时该字段有效 **取值范围**: 不涉及 **默认取值**: 不涉及 

        :return: The vul_id_list of this HandleImageVulnerabilityRequestBody.
        :rtype: list[str]
        """
        return self._vul_id_list

    @vul_id_list.setter
    def vul_id_list(self, vul_id_list):
        r"""Sets the vul_id_list of this HandleImageVulnerabilityRequestBody.

        **参数解释**: select_type值为specific_vul_all_image时，该字段用于指定需要处置的漏洞id列表 **约束限制**: 仅在select_type值为specific_vul_all_image时该字段有效 **取值范围**: 不涉及 **默认取值**: 不涉及 

        :param vul_id_list: The vul_id_list of this HandleImageVulnerabilityRequestBody.
        :type vul_id_list: list[str]
        """
        self._vul_id_list = vul_id_list

    @property
    def vul_data_list(self):
        r"""Gets the vul_data_list of this HandleImageVulnerabilityRequestBody.

        **参数解释**: select_type值为vul_view时，该字段用于指定需要处置的漏洞和镜像信息 **约束限制**: 仅在select_type值为vul_view时该字段有效 **取值范围**: 不涉及 **默认取值**: 不涉及 

        :return: The vul_data_list of this HandleImageVulnerabilityRequestBody.
        :rtype: list[:class:`huaweicloudsdkhss.v5.HandleImageVulnerabilityRequestBodyVulDataList`]
        """
        return self._vul_data_list

    @vul_data_list.setter
    def vul_data_list(self, vul_data_list):
        r"""Sets the vul_data_list of this HandleImageVulnerabilityRequestBody.

        **参数解释**: select_type值为vul_view时，该字段用于指定需要处置的漏洞和镜像信息 **约束限制**: 仅在select_type值为vul_view时该字段有效 **取值范围**: 不涉及 **默认取值**: 不涉及 

        :param vul_data_list: The vul_data_list of this HandleImageVulnerabilityRequestBody.
        :type vul_data_list: list[:class:`huaweicloudsdkhss.v5.HandleImageVulnerabilityRequestBodyVulDataList`]
        """
        self._vul_data_list = vul_data_list

    @property
    def image_data_list(self):
        r"""Gets the image_data_list of this HandleImageVulnerabilityRequestBody.

        **参数解释**: select_type值为image_view时，该字段用于指定需要处置的漏洞和镜像信息 **约束限制**: 仅在select_type值为image_view时该字段有效 **取值范围**: 不涉及 **默认取值**: 不涉及 

        :return: The image_data_list of this HandleImageVulnerabilityRequestBody.
        :rtype: list[:class:`huaweicloudsdkhss.v5.HandleImageVulnerabilityRequestBodyImageDataList`]
        """
        return self._image_data_list

    @image_data_list.setter
    def image_data_list(self, image_data_list):
        r"""Sets the image_data_list of this HandleImageVulnerabilityRequestBody.

        **参数解释**: select_type值为image_view时，该字段用于指定需要处置的漏洞和镜像信息 **约束限制**: 仅在select_type值为image_view时该字段有效 **取值范围**: 不涉及 **默认取值**: 不涉及 

        :param image_data_list: The image_data_list of this HandleImageVulnerabilityRequestBody.
        :type image_data_list: list[:class:`huaweicloudsdkhss.v5.HandleImageVulnerabilityRequestBodyImageDataList`]
        """
        self._image_data_list = image_data_list

    @property
    def remark(self):
        r"""Gets the remark of this HandleImageVulnerabilityRequestBody.

        **参数解释**: 处置操作的描述信息 **约束限制**: 不涉及 **取值范围**: 字符长度0-512位 **默认取值**: 不涉及 

        :return: The remark of this HandleImageVulnerabilityRequestBody.
        :rtype: str
        """
        return self._remark

    @remark.setter
    def remark(self, remark):
        r"""Sets the remark of this HandleImageVulnerabilityRequestBody.

        **参数解释**: 处置操作的描述信息 **约束限制**: 不涉及 **取值范围**: 字符长度0-512位 **默认取值**: 不涉及 

        :param remark: The remark of this HandleImageVulnerabilityRequestBody.
        :type remark: str
        """
        self._remark = remark

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                if attr in self.sensitive_list:
                    result[attr] = "****"
                else:
                    result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        import simplejson as json
        if six.PY2:
            import sys
            reload(sys)
            sys.setdefaultencoding("utf-8")
        return json.dumps(sanitize_for_serialization(self), ensure_ascii=False)

    def __repr__(self):
        """For `print`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, HandleImageVulnerabilityRequestBody):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
